-- COVID 19 Data Exploration - March 2023

SELECT *
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
ORDER BY location, date

-- Select the data that we are going to be starting with

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
WHERE continent is not null 
ORDER BY location, date

-- Total Cases vs Total Deaths

SELECT Location, date, total_cases,total_deaths, CAST((total_deaths/ CAST(total_cases AS decimal(10,2))*100) AS decimal(10,2)) as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE location = 'Spain'
AND continent is not null 
ORDER BY location, date

-- Total Cases vs Population

SELECT location, date, population, total_cases, CAST((total_cases*1.0/population*100) AS decimal(10,2)) as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
WHERE location = 'Spain' AND continent is not null 
ORDER BY location, date

-- Countries with Highest Infection Rate compared to population

SELECT location, population, MAX(total_cases) AS HighestInfectionCount, MAX(CAST((total_cases*1.0/population*100) AS decimal(10,2))) as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL
GROUP BY location, population
ORDER BY PercentPopulationInfected desc

-- Countries with Highest Death Count per Population

SELECT location, MAX(total_deaths) AS totaldeathcountloc
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL
GROUP BY location
ORDER BY totaldeathcountloc DESC

-- Continents with Highest Death count per Population

SELECT continent, MAX(total_deaths) AS totaldeathcountcont
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL
GROUP BY continent
ORDER BY totaldeathcountcont DESC

-- Total of new cases, total deaths and death percentage

SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths*1.0)/SUM(new_cases*1.0)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL
ORDER BY 1,2

-- Total Population vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingpeoplevaccinanted
FROM PortfolioProject..CovidDeaths AS dea
JOIN PortfolioProject..CovidVaccinations AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent is not NULL
ORDER BY 2,3

-- Using CTE to perform Calculation on Partition By in previous query

WITH popvsvac (continent, location, date, population, new_vaccinations, rollingpeoplevaccinanted)
AS 
(
  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingpeoplevaccinanted
FROM PortfolioProject..CovidDeaths AS dea
JOIN PortfolioProject..CovidVaccinations AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent is not NULL
--ORDER BY 2,3  
)
SELECT *, (rollingpeoplevaccinanted*1.0/population)*100 AS popvsvacpercent
FROM popvsvac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP TABLE if exists #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
    continent nvarchar(255),
    location nvarchar(255),
    date datetime,
    population numeric,
    new_vaccinations numeric, 
    rollingpeoplevaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingpeoplevaccinated
FROM PortfolioProject..CovidDeaths AS dea
JOIN PortfolioProject..CovidVaccinations AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
--WHERE dea.continent is not NULL
--ORDER BY 2,3  

SELECT *, (rollingpeoplevaccinated*1.0/population)*100 AS popvsvacpercent
FROM #PercentPopulationVaccinated


-- Creating View to store date for later visualizations

CREATE VIEW PercentPopulationVaccinated AS 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingpeoplevaccinated
FROM PortfolioProject..CovidDeaths AS dea
JOIN PortfolioProject..CovidVaccinations AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent is not NULL
--ORDER BY 2,3  